<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.brp.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.brp.entity.UserEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="is_login_mybase" property="isLoginMybase" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="is_collapse_menu" property="isCollapseMenu" jdbcType="INTEGER" />
    <result column="menu_defined_type" property="menuDefinedType" jdbcType="INTEGER" />

	  <result column="education" property="education" jdbcType="VARCHAR" />
	  <result column="school" property="school" jdbcType="VARCHAR" />
	  <result column="provinceId" property="provinceId" jdbcType="VARCHAR" />
	  <result column="provinceName" property="provinceName" jdbcType="VARCHAR" />
	  <result column="cityId" property="cityId" jdbcType="VARCHAR" />

	  <result column="cityName" property="cityName" jdbcType="VARCHAR" />
	  <result column="areaId" property="areaId" jdbcType="VARCHAR" />
	  <result column="areaName" property="areaName" jdbcType="VARCHAR" />
	  <result column="skills" property="skills" jdbcType="VARCHAR" />
	  <result column="signature" property="signature" jdbcType="VARCHAR" />
   </resultMap> 
  <resultMap id="authUserResultMap" type="com.brp.util.vo.UserAuthVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="is_login_mybase" property="isLoginMybase" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    
    <result column="authUserId" property="authUserId" jdbcType="VARCHAR" />
    <result column="menu_defined_type" property="menuDefinedType" jdbcType="INTEGER" />
	  <result column="education" property="education" jdbcType="VARCHAR" />
	  <result column="school" property="school" jdbcType="VARCHAR" />
	  <result column="provinceId" property="provinceId" jdbcType="VARCHAR" />
	  <result column="provinceName" property="provinceName" jdbcType="VARCHAR" />
	  <result column="cityId" property="cityId" jdbcType="VARCHAR" />

	  <result column="cityName" property="cityName" jdbcType="VARCHAR" />
	  <result column="areaId" property="areaId" jdbcType="VARCHAR" />
	  <result column="areaName" property="areaName" jdbcType="VARCHAR" />
	  <result column="skills" property="skills" jdbcType="VARCHAR" />
	  <result column="signature" property="signature" jdbcType="VARCHAR" />
  </resultMap> 
  <resultMap id="roleUserResultMap" type="com.brp.util.vo.UserRoleVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="is_login_mybase" property="isLoginMybase" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    
    <result column="roleUserId" property="roleUserId" jdbcType="VARCHAR" />
    <result column="menu_defined_type" property="menuDefinedType" jdbcType="INTEGER" />
	  <result column="education" property="education" jdbcType="VARCHAR" />
	  <result column="school" property="school" jdbcType="VARCHAR" />
	  <result column="provinceId" property="provinceId" jdbcType="VARCHAR" />
	  <result column="provinceName" property="provinceName" jdbcType="VARCHAR" />
	  <result column="cityId" property="cityId" jdbcType="VARCHAR" />

	  <result column="cityName" property="cityName" jdbcType="VARCHAR" />
	  <result column="areaId" property="areaId" jdbcType="VARCHAR" />
	  <result column="areaName" property="areaName" jdbcType="VARCHAR" />
	  <result column="skills" property="skills" jdbcType="VARCHAR" />
	  <result column="signature" property="signature" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
	   id,create_user,update_user,create_time,update_time,
   		company_id,company_name,department_name,status,department_id,
   		user_name,telphone,password,mobile,user_code,is_login_mybase,
   		position_id,email,is_collapse_menu,
		education,school,provinceId,provinceName,cityId,
		cityName,areaId,areaName,skills,signature
  </sql>
  <insert id="insertUser" parameterType="com.brp.entity.UserEntity" useGeneratedKeys="true" keyProperty="id">
    insert user
   		(create_user,update_user,create_time, update_time,
   		company_id,company_name,department_name,status,department_id,
   		user_name,telphone,password,mobile,user_code,
   		is_login_mybase,position_id,email,is_collapse_menu,
   		menu_defined_type
   		) 
    values
    	( #{createUser,jdbcType=VARCHAR},#{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},
    	#{companyId,jdbcType=INTEGER},#{companyName,jdbcType=VARCHAR},#{departmentName,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},#{departmentId,jdbcType=INTEGER},
    	#{userName,jdbcType=VARCHAR},#{telphone,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{mobile,jdbcType=VARCHAR},#{userCode,jdbcType=VARCHAR},
		#{isLoginMybase,jdbcType=INTEGER},#{positionId,jdbcType=INTEGER},#{email,jdbcType=VARCHAR},#{isCollapseMenu,jdbcType=INTEGER},
		#{menuDefinedType,jdbcType=INTEGER}
    	)
  </insert>
  <select id="getUserPage" resultMap="BaseResultMap" parameterType="com.brp.util.query.UserQuery" > 
         select 
			 u.id,u.create_user,u.update_user,u.create_time,u.update_time,
			   		u.company_id,u.company_name,d.department_name as department_name,u.status,u.department_id,
			   		u.user_name,u.telphone,u.password,u.mobile,u.user_code,u.is_login_mybase,
			   		u.position_id, p.position_name as position_name,u.email,u.menu_defined_type from user u 
			left join position p
			on u.position_id=p.id
			left join department d
			on u.department_id = d.id

         where 1=1
         <trim prefix=" " suffix="" suffixOverrides="" >
		   <if test="departmentId != null and departmentId != ''" >
		       and u.department_id in (${departmentId})
		      </if>
		      <if test="companyId != null and companyId != ''" >
		       and u.company_id =  #{companyId}
		      </if>
		     <if test="userName != null and userName != ''" >
		       and u.user_name  like '${userName}'
		      </if>
		      <if test="telphone != null and telphone != ''" >
		       and u.telphone =  #{telphone}
		      </if>
		      <if test="status != null and status != ''" >
		       and u.`status` =  #{status}
		      </if>
		 </trim>
		 
         order by create_time desc 
    </select>
    <select id="getUserListByAuthIdPage" resultMap="authUserResultMap" parameterType="com.brp.util.query.UserAuthQuery" >  
		select 
			 u.id,u.create_user,u.update_user,u.create_time,u.update_time,
			   		u.company_id,u.company_name,d.department_name as department_name,u.status,u.department_id,
			   		u.user_name,u.telphone,u.password,u.mobile,u.user_code,u.is_login_mybase,
			   		u.position_id, p.position_name as position_name,u.email, au.id as authUserId
			from authority_user au 
			left join user u  on au.user_id = u.id
			left join position p
			on u.position_id=p.id
			left join department d
			on u.department_id = d.id

         where 1=1 and au.auth_id=#{authId} and u.company_id = #{companyId} and au.is_delete =0
         
		 
         order by create_time desc 
    </select>
    
    <select id="getUserListByRoleIdPage" resultMap="roleUserResultMap" parameterType="com.brp.util.query.UserRoleQuery" >  
		select 
			 u.id,u.create_user,u.update_user,u.create_time,u.update_time,
			   		u.company_id,u.company_name,d.department_name as department_name,u.status,u.department_id,
			   		u.user_name,u.telphone,u.password,u.mobile,u.user_code,u.is_login_mybase,
			   		u.position_id, p.position_name as position_name,u.email, ru.id as roleUserId
			from role_user ru 
			left join user u  on ru.userId = u.id
			left join position p
			on u.position_id=p.id
			left join department d
			on u.department_id = d.id

         where 1=1 and ru.roleId=#{roleId} and u.company_id = #{companyId} and ru.isDelete =0
         
		 
         order by create_time desc 
    </select>
     <select id="getUserListByCompanyIdAndDeptId" resultMap="BaseResultMap" parameterType="com.brp.util.query.UserQuery" >
         select 
         <include refid="Base_Column_List" />
         from user
         where 1=1
         <trim prefix=" " suffix="" suffixOverrides="" >
		   <if test="departmentId != null and departmentId != ''" >
		       and department_id =  #{departmentId}
		      </if>
		      <if test="companyId != null and companyId != ''" >
		       and company_id =  #{companyId}
		      </if>
		 </trim>
		 
         order by create_time desc 
    </select>
    
    <select id="getUserListByCompanyId" resultMap="BaseResultMap" parameterType="java.lang.String" >
         select 
         <include refid="Base_Column_List" />
         from user
         where company_id =  #{companyId}
         order by create_time desc 
    </select>
	<select id="getUserCountByCompanyId" resultType="java.lang.Integer" parameterType="java.lang.String" >
		select
		count(id)
		from user
		where company_id =  #{companyId}
	</select>
	<update id="updateUser" parameterType="com.brp.entity.UserEntity">
		update user set 
		<if test="createUser != null">
			create_user=#{createUser,jdbcType=VARCHAR},
		</if>
		<if test="updateUser != null">
			update_user=#{updateUser,jdbcType=VARCHAR}, 
		</if>
		<if test="createTime != null">
			create_time=#{createTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updateTime != null">
			update_time=#{updateTime,jdbcType=TIMESTAMP},
		</if>
		<if test="status != null">
			`status`=#{status,jdbcType=INTEGER},
		</if>
		<if test="departmentName != null">
			department_name=#{departmentName,jdbcType=VARCHAR},
		</if>
		<if test="departmentId != null">
			department_id=#{departmentId,jdbcType=INTEGER},
		</if>
		<if test="userName != null">
			user_name=#{userName,jdbcType=VARCHAR},
		</if>
		<if test="telphone != null">
			telphone=#{telphone,jdbcType=VARCHAR},
		</if>
		<if test="password != null and password != ''">
			`password`=#{password,jdbcType=VARCHAR},
		</if>
		<if test="isLoginMybase != null">
			is_login_mybase=#{isLoginMybase,jdbcType=INTEGER},
		</if>
		<if test="email != null">
			email=#{email,jdbcType=VARCHAR},
		</if>
		<if test="positionId != null">
			position_id=#{positionId,jdbcType=INTEGER},
		</if>
        <if test="school != null">
            school=#{school,jdbcType=VARCHAR},
        </if>
        <if test="education != null">
            education=#{education,jdbcType=VARCHAR},
        </if>
        <if test="positionId != null">
            signature=#{signature,jdbcType=VARCHAR},
        </if>
		id=#{id}
		 where id=#{id} limit 1;
		 
		 
	</update>
	<update id="deleteUserById" parameterType="java.lang.String">
		update user set 
		status=100
		where id=#{id} limit 1;
		 
		 
	</update>
	
	<update id="changeCollapse">
		update user set 
		is_collapse_menu=#{isCollapseMenu}
		where id=#{userId} limit 1;
		 
		 
	</update>
    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
			 u.id,u.create_user,u.update_user,u.create_time,u.update_time,
			   		u.company_id,u.company_name,d.department_name as department_name,u.status,u.department_id,
			   		u.user_name,u.telphone,u.password,u.mobile,u.user_code,u.is_login_mybase,
			   		u.position_id, p.position_name as position_name,u.email,u.is_collapse_menu,
			   		u.menu_defined_type,
		u.education,u.school,u.provinceId,u.provinceName,u.cityId,
		u.cityName,u.areaId,u.areaName,u.skills,u.signature
		 from user u 
			left join position p
			on u.position_id=p.id
			left join department d
			on u.department_id = d.id
			
         where u.id = #{id}
    </select>
    <select id="loginMybase" resultMap="BaseResultMap">
         select 
         <include refid="Base_Column_List" />
         from user
         where `password` = #{password} and `status` = 101  and is_login_mybase = 1 and (telphone=#{account}  or user_name =#{account} or user_code=#{account})
    </select>
    <select id="login" resultMap="BaseResultMap">
         select 
         <include refid="Base_Column_List" />
         from user
         where `password` = #{password} and `status` = 101 and (telphone=#{account}  or user_name =#{account} or user_code=#{account})
    </select>
    <select id="getUserByDepartmentIdAndTelphone" resultMap="BaseResultMap">
         select 
         <include refid="Base_Column_List" />
         from user
         where  telphone=#{telphone} and department_id = #{departmentId} and status != 102 limit 1
    </select>
    
    <select id="getAuthUserByCompanyIdAndAuthId" resultMap="authUserResultMap" >
       SELECT
			u.id,
			u.user_name,
			u.company_name,
			u.department_name,
			au.auth_id AS authUserId
		FROM
			`USER` u
		LEFT JOIN authority_user au ON u.id = au.user_id
		WHERE
			au.is_delete = 0
		AND au.company_id = #{companyId}
		AND u.company_id = #{companyId}
		AND au.auth_id=#{authId}
    </select>
    
     <select id="getRoleUserByCompanyIdAndRoleId" resultMap="roleUserResultMap" >
       SELECT
			u.id,
			u.user_name,
			u.company_name,
			u.department_name,
			ru.roleId AS roleUserId
		FROM
			`USER` u
		LEFT JOIN role_user ru ON u.id = ru.userId
		WHERE
			ru.isDelete = 0
		AND ru.companyId = #{companyId}
		AND u.company_id = #{companyId}
		AND ru.roleId=#{roleId}
    </select>
    
    <select id="getNotAuthUserByCompanyIdAndAuthId" resultMap="authUserResultMap" >
       SELECT
			u.id,
			u.user_name,
			u.company_name,
			u.department_name
		FROM
			user u
		WHERE
		u.company_id = #{companyId} 
		AND u.id NOT IN(
			SELECT
				u.id
			FROM
				user u
			LEFT JOIN authority_user au ON u.id = au.user_id
			WHERE
				au.is_delete = 0
			AND au.company_id = #{companyId}
			AND u.company_id = #{companyId}
			AND au.auth_id = #{authId}
		)
    </select>
    <select id="getRoleUserByCompanyIdAndAuthId" resultMap="roleUserResultMap" >
       SELECT
			u.id,
			u.user_name,
			u.company_name,
			u.department_name,
			ru.roleId AS roleUserId
		FROM
			`USER` u
		LEFT JOIN role_user ru ON u.id = ru.userId
		WHERE
			ru.isDelete = 0
		AND ru.companyId = #{companyId}
		AND u.company_id = #{companyId}
		AND ru.authId=#{roleId}
    </select>
    <select id="getNotRoleUserByCompanyIdAndRoleId" resultMap="roleUserResultMap" >
       SELECT
			u.id,
			u.user_name,
			u.company_name,
			u.department_name
		FROM
			user u
		WHERE
		u.company_id = #{companyId} 
		AND u.id NOT IN(
			SELECT
				u.id
			FROM
				user u
			LEFT JOIN role_user ru ON u.id = ru.userId
			WHERE
				ru.isDelete = 0
			AND ru.companyId = #{companyId}
			AND u.company_id = #{companyId}
			AND ru.roleId = #{roleId}
		)
    </select>
     <select id="getUserByCompanyIdAndAuthId" resultMap="authUserResultMap">  
		SELECT
			u.id,
			u.user_name,
			au.auth_id AS authUserId
		FROM
			USER u
		LEFT JOIN authority_user au ON u.id = au.user_id
		where au.is_delete=0
		GROUP BY
			id
    </select>
    <select id="isExistTelephone" resultType="java.lang.Integer" >
        select count(id) from user where telphone=#{telephone}
    </select>
    <update id="batchUpdateUserDefineType">
  	  update user set menu_defined_type = #{defineType} where company_id=#{companyId} and department_id in (${deptIdStr}) and menu_defined_type>=#{defineType}
    </update>
    
    <select id="getUserIdListByAuthIdForRole" resultType="java.lang.String" parameterType="java.lang.String">
    	SELECT
			u.id
		FROM
			authority_user au
		LEFT JOIN `USER` u ON u.id = au.user_id
		AND u.menu_defined_type >= 4
		WHERE
			au.auth_id = #{authId}
		AND au.is_delete = 0
    </select>
    <update id="batchUpdateDefineTypeForRole" parameterType="java.lang.String">
	    UPDATE user
		SET menu_defined_type = 4
		WHERE
			id IN (
				${userIdStr}
			)
    </update>
</mapper>